{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/header/header.component.html","./src/app/page-not-found/page-not-found.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/app/recipes/recipe-entry/recipe-entry.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipes.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/page-not-found/page-not-found.component.css","./src/app/page-not-found/page-not-found.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.css","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.css","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-entry/recipe-entry.component.css","./src/app/recipes/recipe-entry/recipe-entry.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-list.component.css","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipefilter.pipe.ts","./src/app/recipes/recipe-list/recipesearch.pipe.ts","./src/app/recipes/recipe.service.ts","./src/app/recipes/recipes.component.css","./src/app/recipes/recipes.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,oM;;;;;;;;;;;ACAA,0mBAA0mB,YAAY,yRAAyR,YAAY,2LAA2L,YAAY,0M;;;;;;;;;;;ACAlmC,mD;;;;;;;;;;;ACAA,qLAAqL,oBAAoB,6BAA6B,6FAA6F,sBAAsB,uEAAuE,6KAA6K,0DAA0D,gEAAgE,0BAA0B,iSAAiS,wMAAwM,uHAAuH,wSAAwS,8BAA8B,qPAAqP,mBAAmB,mD;;;;;;;;;;;ACA/4D,6/EAA6/E,6EAA6E,yFAAyF,KAAK,i6B;;;;;;;;;;;ACAxqF,yF;;;;;;;;;;;ACAA,0NAA0N,oBAAoB,+CAA+C,4BAA4B,gGAAgG,oBAAoB,qDAAqD,uB;;;;;;;;;;;ACAle,iHAAiH,UAAU,6DAA6D,aAAa,iTAAiT,gBAAgB,2NAA2N,gBAAgB,kJAAkJ,aAAa,wKAAwK,yE;;;;;;;;;;;ACAxjC,6P;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACc;AAEQ;AACyB;AACN;AACG;AACH;AAElF,mBAAmB;AACnB,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD;QACE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE,QAAQ,EAAE;YACtD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iGAAoB,EAAE;YAC7C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,8FAAmB,EAAE;YAC/C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,oGAAqB,EAAE;YACjD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8FAAmB,EAAE;SACrD;KACF;IACD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8FAAqB,EAAE;IACvD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE;CAEzC,CAAC;AAQF;IAAA;IACA,CAAC;IADY,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC1C,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;AC/B7B,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IAAA;IACA,CAAC;IADY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CACxB;IAAD,mBAAC;CAAA;AADwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACU;AACV;AACuB;AAEhC;AACgB;AACH;AACsB;AACY;AACN;AACN;AACG;AACH;AACP;AACA;AA2B3E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,wEAAe;gBACf,+FAAmB;gBACnB,2GAAmB;gBACnB,qGAAqB;gBACrB,+FAAmB;gBACnB,kGAAoB;gBACpB,+FAAqB;gBACrB,wFAAgB;gBAChB,wFAAgB;aAChB;YACF,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,kEAAmB;gBACnB,0DAAW;gBACX,qEAAgB;gBAChB,4FAAuB;aAAC;YAC1B,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5CtB,+DAA+D,2I;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;QADA,aAAQ,GAAG,kBAAkB,CAAC;IACd,CAAC;IACjB,kCAAQ,GAAR;IACA,CAAC;IAJU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,oJAAsC;;SAEvC,CAAC;OACW,eAAe,CAK3B;IAAD,sBAAC;CAAA;AAL2B;;;;;;;;;;;;ACP5B,+DAA+D,mK;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,4KAA8C;;SAE/C,CAAC;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,iCAAiC,iBAAiB,gBAAgB,8BAA8B,uBAAuB,0BAA0B,GAAG,aAAa,yBAAyB,GAAG,eAAe,oBAAoB,GAAG,eAAe,sBAAsB,GAAG,yBAAyB,oBAAoB,2BAA2B,4BAA4B,GAAG,gBAAgB,oBAAoB,GAAG,+CAA+C,ujC;;;;;;;;;;;;;;;;;;;ACAtZ;AAEA;AACe;AAQjE;IAeE,+BAAoB,aAA4B,EAAU,MAAc,EAAU,KAAqB;QAAnF,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE5G,wCAAQ,GAAR;QAAA,iBAQC;QAPC,kCAAkC;QAClC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,MAAM;aACd,SAAS,CAAC,UAAC,MAAc;YACxB,KAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uBAAuB;IACvB,+CAAe,GAAf,UAAgB,QAAQ;QAAxB,iBAiBC;QAhBC,qCAAqC;QACrC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,YAAoB;YACxE,KAAI,CAAC,aAAa,GAAG;gBACnB,EAAE,EAAE,YAAY,CAAC,EAAE;gBACnB,WAAW,EAAE,YAAY,CAAC,WAAW;gBACrC,SAAS,EAAE,YAAY,CAAC,SAAS;gBACjC,YAAY,EAAE,YAAY,CAAC,YAAY;gBACvC,QAAQ,EAAE,YAAY,CAAC,QAAQ;gBAC/B,SAAS,EAAE,YAAY,CAAC,SAAS;gBACjC,IAAI,EAAE,YAAY,CAAC,IAAI;gBACvB,YAAY,EAAE,YAAY,CAAC,YAAY;aACxC,CAAC;YACF,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2BAA2B;IAC3B,4CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,gDAAgD;IAChD,8CAAc,GAAd;QACE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;;gBAzCkC,6DAAa;gBAAkB,sDAAM;gBAAiB,8DAAc;;IAf5F,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iLAA6C;;SAE9C,CAAC;OACW,qBAAqB,CAyDjC;IAAD,4BAAC;CAAA;AAzDiC;;;;;;;;;;;;ACXlC,+BAA+B,qBAAqB,GAAG,kBAAkB,uBAAuB,GAAG,yBAAyB,eAAe,GAAG,gCAAgC,eAAe,GAAG,+CAA+C,2mB;;;;;;;;;;;;;;;;;;;;;ACA7L;AAC6B;AACd;AACf;AAC+B;AAejF;IAKE,6BAAoB,aAA4B,EAAU,MAAc,EAAU,KAAqB;QAAnF,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAJvG,aAAQ,GAAG,KAAK,CAAC;IAI0F,CAAC;IAE5G,sCAAQ,GAAR;QAAA,iBAUC;QATC,0DAA0D;QAC1D,IAAI,CAAC,KAAK,CAAC,MAAM;aACd,SAAS,CACR,UAAC,MAAc;YACb,KAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;YACrC,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;IAED,uCAAS,GAAT;QAAA,iBAgDC;QA/CC,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,IAAI,cAAc,CAAC;QACnB,IAAI,kBAAkB,GAAG,EAAE,CAAC;QAC5B,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,iBAAiB,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,kDAAkD;YACrE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC;iBACtC,SAAS,CAAC,UAAC,MAAM;;gBAChB,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;gBACzB,eAAe,GAAG,MAAM,CAAC,SAAS,CAAC;gBACnC,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACjC,kBAAkB,GAAG,MAAM,CAAC,YAAY,CAAC;gBACzC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;gBAE9B,4BAA4B;gBAC5B,IAAI,MAAM,CAAC,aAAa,CAAC,EAAE;;wBACzB,KAAuB,8DAAM,CAAC,WAAW,6CAAE;4BAAtC,IAAI,UAAU;4BACjB,iBAAiB,CAAC,IAAI,CACpB,IAAI,wDAAS,CAAC;gCACZ,IAAI,EAAE,IAAI,0DAAW,CAAC,UAAU,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;6BAC5D,CAAC,CACH,CAAC;yBACH;;;;;;;;;iBACF;gBACD,KAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;oBAC9B,IAAI,EAAE,IAAI,0DAAW,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBACtD,SAAS,EAAE,IAAI,0DAAW,CAAC,eAAe,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;oBACjH,QAAQ,EAAE,IAAI,0DAAW,CAAC,cAAc,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACtG,YAAY,EAAE,IAAI,0DAAW,CAAC,kBAAkB,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjG,SAAS,EAAE,IAAI,0DAAW,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;oBAC3D,WAAW,EAAE,iBAAiB;iBAC/B,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,qCAAqC;SAE5C;QACD,yCAAyC;QAEzC,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,IAAI,EAAE,IAAI,0DAAW,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtD,SAAS,EAAE,IAAI,0DAAW,CAAC,eAAe,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;YACjH,QAAQ,EAAE,IAAI,0DAAW,CAAC,cAAc,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACtG,YAAY,EAAE,IAAI,0DAAW,CAAC,kBAAkB,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjG,SAAS,EAAE,IAAI,0DAAW,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3D,WAAW,EAAE,iBAAiB;SAC/B,CAAC,CAAC;IACL,CAAC;IAGD,+BAA+B;IAC/B,6CAAe,GAAf;QACc,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC,IAAI,CAClD,IAAI,wDAAS,CAAC;YACZ,MAAM,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CACH,CAAC;IACJ,CAAC;IAED,yCAAyC;IACzC,gDAAkB,GAAlB,UAAmB,KAAa;QAClB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,mDAAmD;IACnD,sCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,0CAA0C;IAC1C,sCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,sCAAsC;YACzD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACjE;aAAM,EAAE,uCAAuC;YAC9C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;SACxD;IACH,CAAC;IAED,qCAAqC;IACrC,yCAAW,GAAX;QACE,OAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAe,CAAC,QAAQ,CAAC;IACpE,CAAC;;gBAjGkC,6DAAa;gBAAkB,sDAAM;gBAAiB,8DAAc;;IAL5F,mBAAmB;QAb/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,2KAA2C;YAE3C,UAAU,EAAE;gBACV,mEAAO,CAAC,WAAW,EAAE;oBACnB,iEAAK,CAAC,MAAM,EAAE,iEAAK,CAAC;wBAClB,OAAO,EAAE,CAAC;qBACX,CAAC,CAAC;oBACH,sEAAU,CAAC,YAAY,EAAE,mEAAO,CAAC,GAAG,CAAC,CAAC;iBACvC,CAAC;aACH;;SACF,CAAC;OACW,mBAAmB,CAuG/B;IAAD,0BAAC;CAAA;AAvG+B;;;;;;;;;;;;ACnBhC,+DAA+D,uK;;;;;;;;;;;;;;;;;;ACAb;AACA;AAOlD;IAGE,8BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,uCAAQ,GAAR;QAAA,iBAMC;QALC,uEAAuE;QACvE,IAAI,CAAC,aAAa,CAAC,WAAW;aAC3B,SAAS,CAAC,UAAC,WAAW;YACrB,KAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;;gBARkC,6DAAa;;IAHrC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,8KAA4C;;SAE7C,CAAC;OACW,oBAAoB,CAYhC;IAAD,2BAAC;CAAA;AAZgC;;;;;;;;;;;;ACRjC,yCAAyC,qBAAqB,GAAG,+CAA+C,2Y;;;;;;;;;;;;;;;;;ACAvD;AAQzD;IAGE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALQ;QAAR,2DAAK,EAAE;4DAAqB;IADlB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,uLAA2C;;SAE5C,CAAC;OACW,mBAAmB,CAQ/B;IAAD,0BAAC;CAAA;AAR+B;;;;;;;;;;;;ACRhC,2BAA2B,wBAAwB,GAAG,aAAa,qBAAqB,GAAG,+CAA+C,2a;;;;;;;;;;;;;;;;;;ACA7E;AAEX;AAQlD;IAYE,6BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAXhD,YAAO,GAAa,EAAE,CAAC;QAIvB,WAAM,GAAG,YAAY,CAAC;QACtB,cAAS,GAAG,wCAAwC,CAAC;QACrD,cAAS,GAAG,uBAAuB,CAAC;QACpC,cAAS,GAAG,EAAE,CAAC;QACf,eAAU,GAAG,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IAG/B,CAAC;IAErD,sCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,gDAAgD;QAChD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CACzC,sBAAY;YACV,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;YACpC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,CAAC,CACF,CAAC;QACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,UAAC,OAAO;YAC5E,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAwC;IACxC,yCAAW,GAAX;QACE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;;gBAxBkC,6DAAa;;IAZrC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,2KAA2C;;SAE5C,CAAC;OACW,mBAAmB,CAsC/B;IAAD,0BAAC;CAAA;AAtC+B;;;;;;;;;;;;;;;;;;ACVhC,6CAA6C;AACO;AAMpD;IAAA;IAMA,CAAC;IALC,oCAAS,GAAT,UAAU,MAAW,EAAE,IAAY;QACjC,OAAO,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAC;YAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IALU,gBAAgB;QAJ5B,0DAAI,CAAC;YACJ,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,KAAK;SACZ,CAAC;OACW,gBAAgB,CAM5B;IAAD,uBAAC;CAAA;AAN4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA;AAAA;AAAA,yCAAyC;;AAEW;AAMpD;IAAA;IAWA,CAAC;IATC,oCAAS,GAAT,UAAU,KAAU,EAAE,IAAY;QAChC,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAC5B,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QAC5B,wFAAwF;QACxF,OAAO,KAAK,CAAC,MAAM,CAAC,UAAU,IAAI;YAChC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,gBAAgB;QAJ5B,0DAAI,CAAC;YACJ,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,KAAK;SACZ,CAAC;OACW,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;;;;;;;;;;ACRc;AAEZ;AACmB;AACS;AACF;AAGzD;IAME,uBAAoB,IAAgB,EAAU,MAAc,EAAU,KAAqB;QAAvE,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAJ3F,mBAAc,GAAG,IAAI,4CAAO,EAAY,CAAC;QACzC,gBAAW,GAAG,IAAI,4CAAO,EAAU,CAAC;QAC5B,YAAO,GAAa,EAAE,CAAC;QAG7B,IAAI,CAAC,iBAAiB,GAAG,wEAAW,CAAC,MAAM,CAAC;IAC9C,CAAC;IAED,oDAAoD;IACpD,4CAAoB,GAApB;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,+CAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,uCAAuC;IACvC,kCAAU,GAAV,UAAW,OAAiB;QAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAGD,qBAAqB;IACrB,qCAAa,GAAb,UAAc,QAAQ;QACpB,IAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,eAAe,GAAG,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAGD,uBAAuB;IACvB,iCAAS,GAAT,UAAU,UAAU;QAApB,iBAmBC;QAlBC,IAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC5B,IAAM,YAAY,GAAW;YAC3B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,CAAC,SAAS;YACpE,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,WAAW;YACnG,YAAY,EAAE,UAAU,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW;SACjE,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChC,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAClD,IAAI,CAAC,IAAI;aACN,IAAI,CACH,OAAO,EACP,IAAI,CAAC,OAAO,CACb;aACA,SAAS,CAAC;YACT,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAA8B;IAC9B,oCAAY,GAAZ,UAAa,KAAa,EAAE,aAAqB;QAAjD,iBAoBC;QAnBC,IAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAM,SAAS,GAAW;YACxB,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,aAAa,CAAC,SAAS;YACvE,SAAS,EAAE,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,CAAC,QAAQ,EAAE,WAAW,EAAE,aAAa,CAAC,WAAW;YAC5G,YAAY,EAAE,aAAa,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW;SACpE,CAAC;QAEF,IAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC7D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,EAAE,SAAS,CAAC;aACxC,SAAS,CAAC;YACT,IAAM,cAAc,GAAG,+CAAI,KAAI,CAAC,OAAO,CAAC,CAAC;YACzC,IAAM,YAAY,GAAG,cAAc,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,EAArB,CAAqB,CAAC,CAAC;YAC1E,cAAc,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;YACzC,KAAI,CAAC,OAAO,GAAG,cAAc,CAAC;YAC9B,4CAA4C;YAC5C,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,6BAA6B;YAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAA8B;IAC9B,oCAAY,GAAZ,UAAa,QAAgB;QAA7B,iBAOC;QANC,IAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;aACnC,SAAS,CAAC,UAAC,QAAQ;YAClB,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,CAAC;YACzC,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,+DAA+D;IAC/D,oCAAY,GAAZ;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyC,MAAM,CAAC,CAAC;IACvE,CAAC;;gBApFyB,+DAAU;gBAAkB,sDAAM;gBAAiB,8DAAc;;IANhF,aAAa;QADzB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;OACtB,aAAa,CA4FzB;IAAD,oBAAC;CAAA;AA5FyB;;;;;;;;;;;;ACR1B,+DAA+D,+I;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,uJAAuC;;SAExC,CAAC;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,eAAe,EAAE,KAAK;IACtB,MAAM,EAAE,2BAA2B;CACpC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\"\\n        data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">{{ siteName }}</a>\\n    </div>\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"><a class=\\\"nav-link\\\"\\n            routerLink=\\\"/recipes\\\">Home <span class=\\\"sr-only\\\">(current)</span></a></li>\\n        <li routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"><a class=\\\"nav-link\\\"\\n            routerLink=\\\"/recipes/new\\\" class=\\\"new-recipe\\\">New Recipe</a></li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\"","module.exports = \"<h3>This page was not Found</h3>\"","module.exports = \"<div *ngIf=\\\"error\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <img [src]=\\\"displayRecipe.imagePath\\\" alt=\\\"\\\" class=\\\"img-responsive\\\" id=\\\"{{ displayRecipe.id }}\\\" style=\\\"max-height: 300px;\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>{{ displayRecipe.name }}\\n        <span class=\\\"dot\\\" *ngIf=\\\"displayRecipe.indicator == 'veg'; else display \\\"></span>\\n        <ng-template #display>\\n          <span class=\\\"dotred\\\"></span>\\n        </ng-template>\\n      </h1>\\n      <span class=\\\"date-recipe\\\">{{ displayRecipe.creationDate | date: ' dd-MM-yyyy HH:mm' }}</span><br>\\n      <span class=\\\"pplc\\\"> <b>No of people:</b> {{ displayRecipe.eatCount }}</span>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"btn-group\\\">\\n        <ul class=\\\"down-menu\\\">\\n          <li class=\\\"dropdown\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\" style=\\\"cursor: pointer;\\\"\\n              data-toggle=\\\"dropdown\\\" role=\\\"button\\\">Manage Recipe <span class=\\\"caret\\\"></span></button>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onRecipeEdit()\\\" class=\\\"edit-recipe\\\">Edit Recipe</a></li>\\n              <li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onRecipeDelete()\\\" class=\\\"delete-recipe\\\">Delete Recipe</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 recipe-instruct\\\">\\n      <span><b>Recipe Instructions:</b></span>\\n      <p>{{ displayRecipe.instructions }}</p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <b>List of ingredients:</b>\\n      <ul class=\\\"ingredient\\\">\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let ingredient of displayRecipe.ingredients\\\">{{ ingredient.name }}</li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup]=\\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Recipe Name</label>\\n            <input type=\\\"text\\\" id=\\\"name\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n            <span *ngIf=\\\"!recipeForm.get('name').valid && recipeForm.get('name').touched\\\">Please enter a valid recipe\\n              name!</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"eatCount\\\">No of people</label>\\n            <input type=\\\"text\\\" id=\\\"pplCount\\\" formControlName=\\\"eatCount\\\" class=\\\"form-control\\\">\\n            <span *ngIf=\\\"!recipeForm.get('eatCount').valid && recipeForm.get('eatCount').touched\\\">Please enter a valid\\n              count!</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"imagePath\\\">Image URL</label>\\n            <input type=\\\"input\\\" id=\\\"imagePath\\\" class=\\\"form-control\\\" formControlName=\\\"imagePath\\\" #imagePath>\\n            <span *ngIf=\\\"!recipeForm.get('imagePath').valid && recipeForm.get('imagePath').touched\\\">Please enter valid image\\n              Path!</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"instructions\\\">Cooking instructions</label>\\n            <textarea type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control\\\" formControlName=\\\"instructions\\\"\\n              rows=\\\"6\\\"></textarea>\\n            <span *ngIf=\\\"!recipeForm.get('instructions').valid && recipeForm.get('instructions').touched\\\">Please enter\\n              cooking Instructions!</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <input type=\\\"radio\\\" class=\\\"radiobox\\\" formControlName=\\\"indicator\\\" value=\\\"veg\\\" id=\\\"vegtype\\\" checked> Veg\\n          <input type=\\\"radio\\\" class=\\\"radiobox\\\" formControlName=\\\"indicator\\\" value=\\\"nonveg\\\" id=\\\"nonvegtype\\\"> Non Veg<br>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredients\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let ingredient of getControls(); let i = index\\\"\\n            [formGroupName]=\\\"i\\\" style=\\\"margin-top: 10px;\\\">\\n            <div class=\\\"col-xs-8\\\">\\n              <input type=\\\"text\\\" id=\\\"name{{ i }}\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" [@fadeInOut]>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger delete-item\\\" (click)=\\\"onDeleteIngredient(i)\\\">X</button>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-success add-item\\\" (click)=\\\"onAddIngredient()\\\">Add Ingredient</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row custom-btn\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success submit-btn\\\" [disabled]=\\\"!recipeForm.valid\\\">Save</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger cancle-btn\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"<h1 *ngIf=\\\"count > 0\\\" class=\\\"entry-msg\\\">Please select Recipe!</h1>\"","module.exports = \"<a style=\\\"cursor:pointer\\\" class=\\\"list-group-item clearfix\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"[recipeItems.id]\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ recipeItems.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{ recipeItems.instructions }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img [src]=\\\"recipeItems.imagePath\\\" alt=\\\"{{ recipeItems.name }}\\\" class=\\\"img-responsive\\\" style=\\\"max-height: 50px;\\\">\\n  </span>\\n</a>\\n\"","module.exports = \"<div class=\\\"row recipe-listing\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <p *ngIf=\\\"isFetching\\\">{{ loader }}</p>\\n    <h1 *ngIf=\\\"recipes.length == 0 && !isFetching\\\">{{ recipeMsg }}</h1>\\n    <div *ngIf=\\\"recipes.length >= 1 && !isFetching\\\">\\n      <div class=\\\"filter\\\">\\n        <input type=\\\"text\\\" class=\\\"search-box\\\" [(ngModel)]=\\\"filterString\\\" placeholder=\\\"Search for recipes..\\\">\\n        <span *ngFor=\\\"let recipeT of recipeType\\\">\\n          <input class=\\\"chkbox\\\" id=\\\"{{ recipeT.type }}\\\" type=\\\"checkbox\\\" name=\\\"filterrecipe\\\" [(ngModel)]=\\\"recipeT.checked\\\"\\n            (change)=\\\"recipeT.checked ? filterArr.push(recipeT.type) : filterArr.splice(filterArr.indexOf(recipeT.type), 1)\\\" />\\n          {{ recipeT.type }}\\n        </span>\\n      </div>\\n      <div *ngIf=\\\"(recipes | recipesearch:filterString | recipefilter:filterArr).length === 0\\\">\\n        <h3>{{ filterMsg }}</h3>\\n      </div>\\n\\t  \\n      <app-recipe-item [recipeItems]=\\\"recipe\\\"\\n        *ngFor=\\\"let recipe of recipes | recipesearch:filterString | recipefilter:filterArr; index as i\\\">\\n      </app-recipe-item>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <app-recipe-list></app-recipe-list>\\n    </div>\\n    <div class=\\\"col-md-7\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\nimport { RecipeEntryComponent } from './recipes/recipe-entry/recipe-entry.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n// Configure routes\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\n  {\n    path: 'recipes', component: RecipesComponent, children: [\n      { path: '', component: RecipeEntryComponent },\n      { path: 'new', component: RecipeEditComponent },\n      { path: ':id', component: RecipeDetailComponent },\n      { path: ':id/edit', component: RecipeEditComponent }\n    ]\n  },\n  { path: 'not-found', component: PageNotFoundComponent },\n  { path: '**', redirectTo: '/not-found' },\n\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)], // Register Routes for angular to know routes\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\nimport { RecipeEntryComponent } from './recipes/recipe-entry/recipe-entry.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RecipesearchPipe } from './recipes/recipe-list/recipesearch.pipe';\nimport { recipefilterPipe } from './recipes/recipe-list/recipefilter.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipesComponent,\n    HeaderComponent,\n    RecipeListComponent,\n    RecipeItemComponent,\n    RecipeDetailComponent,\n    RecipeEditComponent,\n    RecipeEntryComponent,\n    PageNotFoundComponent,\n    RecipesearchPipe,\n    recipefilterPipe,\n   ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  siteName = 'Recipe Dashboard';\n  constructor() { }\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".dot, .dotred {\\n  height: 25px;\\n  width: 25px;\\n  background-color: #4CAF50;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\\n.dotred {\\n  background-color:red;\\n}\\n\\n.dropdown {\\n  list-style:none;\\n}\\n\\n.down-menu{\\n  padding-left: 0px;\\n}\\n\\n.date-recipe, .pplc {\\n  font-size: 14px;\\n    padding-bottom: 10px;\\n    display: inline-block;\\n}\\n\\n.ingredient{\\n  margin-top:10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtZGV0YWlsL3JlY2lwZS1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtJQUNiLG9CQUFvQjtJQUNwQixxQkFBcUI7QUFDekI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtZGV0YWlsL3JlY2lwZS1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kb3QsIC5kb3RyZWQge1xuICBoZWlnaHQ6IDI1cHg7XG4gIHdpZHRoOiAyNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmRvdHJlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6cmVkO1xufVxuXG4uZHJvcGRvd24ge1xuICBsaXN0LXN0eWxlOm5vbmU7XG59XG5cbi5kb3duLW1lbnV7XG4gIHBhZGRpbmctbGVmdDogMHB4O1xufVxuXG4uZGF0ZS1yZWNpcGUsIC5wcGxjIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmluZ3JlZGllbnR7XG4gIG1hcmdpbi10b3A6MTBweDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  Id: number;\n  error: boolean;\n  recipeSubscription: Subscription;\n  displayRecipe: {\n    id: number,\n    ingredients: any,\n    imagePath: string,\n    instructions: string,\n    eatCount: number,\n    indicator: string,\n    name: string,\n    creationDate: any,\n  };\n\n  constructor(private recipeservice: RecipeService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // Fetching parameter from routes.\n    this.Id = +this.route.snapshot.params['id'];\n    this.route.params\n      .subscribe((params: Params) => {\n        this.Id = +params['id'];\n        this.getSingleRecipe(this.Id);\n      });\n  }\n\n  // Fetch single recipe.\n  getSingleRecipe(recipeId) {\n    // Get single recipe and pass to tpl.\n    this.recipeservice.getRecipeById(recipeId).subscribe((singleRecipe: Recipe) => {\n      this.displayRecipe = {\n        id: singleRecipe.id,\n        ingredients: singleRecipe.ingredients,\n        imagePath: singleRecipe.imagePath,\n        instructions: singleRecipe.instructions,\n        eatCount: singleRecipe.eatCount,\n        indicator: singleRecipe.indicator,\n        name: singleRecipe.name,\n        creationDate: singleRecipe.creationDate,\n      };\n      this.error = true;\n    }, (error) => {\n      this.error = false;\n    });\n  }\n\n  // Navigate to edit recipe.\n  onRecipeEdit() {\n    this.router.navigate(['../', this.Id, 'edit'], { relativeTo: this.route });\n  }\n\n  // Delete a recipe and navigate to recipes page.\n  onRecipeDelete() {\n    this.recipeservice.deleteRecipe(this.Id);\n    this.router.navigate(['/recipes']);\n  }\n}\n","module.exports = \".custom-btn {\\n  margin-top: 15px;\\n}\\n\\n.btn-success {\\n  margin-right: 10px;\\n}\\n\\n.btn span.glyphicon {\\n\\topacity: 0;\\n}\\n\\n.btn.active span.glyphicon {\\n\\topacity: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtZWRpdC9yZWNpcGUtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUdBO0NBQ0MsVUFBVTtBQUNYOztBQUNBO0NBQ0MsVUFBVTtBQUNYIiwiZmlsZSI6InNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtZWRpdC9yZWNpcGUtZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbS1idG4ge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuXG4uYnRuLXN1Y2Nlc3Mge1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG5cblxuLmJ0biBzcGFuLmdseXBoaWNvbiB7XG5cdG9wYWNpdHk6IDA7XG59XG4uYnRuLmFjdGl2ZSBzcGFuLmdseXBoaWNvbiB7XG5cdG9wYWNpdHk6IDE7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css'],\n  animations: [\n    trigger('fadeInOut', [\n      state('void', style({\n        opacity: 0\n      })),\n      transition('void <=> *', animate(400)),\n    ]),\n  ]\n})\nexport class RecipeEditComponent implements OnInit {\n  editMode = false;\n  recipeForm: FormGroup;\n  id: number;\n\n  constructor(private recipeService: RecipeService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // Fetch Id from paramaters and load a form based on mode.\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.id = +params['id'];\n          this.editMode = params['id'] != null;\n          this.recipeFrm();\n        }\n      );\n  }\n\n  recipeFrm() {\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeeatCount;\n    let recipeInstructions = '';\n    let recipeType = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) { // If mode is edit populate value in form element.\n      this.recipeService.getRecipeById(this.id)\n        .subscribe((recipe) => {\n          recipeName = recipe.name;\n          recipeImagePath = recipe.imagePath;\n          recipeeatCount = recipe.eatCount;\n          recipeInstructions = recipe.instructions;\n          recipeType = recipe.indicator;\n\n          // Push ingredient to array.\n          if (recipe['ingredients']) {\n            for (let ingredient of recipe.ingredients) {\n              recipeIngredients.push(\n                new FormGroup({\n                  name: new FormControl(ingredient.name, Validators.required)\n                })\n              );\n            }\n          }\n          this.recipeForm = new FormGroup({\n            name: new FormControl(recipeName, Validators.required),\n            imagePath: new FormControl(recipeImagePath, [Validators.required, Validators.pattern(/\\.(jpe?g|png|gif|bmp)$/i)]),\n            eatCount: new FormControl(recipeeatCount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)]),\n            instructions: new FormControl(recipeInstructions, [Validators.required, Validators.minLength(5)]),\n            indicator: new FormControl(recipeType, Validators.required),\n            ingredients: recipeIngredients\n          });\n        }); // Get single recipe and pass to tpl.\n\n    }\n    // Map a formcontrol to template element.\n\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, [Validators.required, Validators.pattern(/\\.(jpe?g|png|gif|bmp)$/i)]),\n      eatCount: new FormControl(recipeeatCount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)]),\n      instructions: new FormControl(recipeInstructions, [Validators.required, Validators.minLength(5)]),\n      indicator: new FormControl(recipeType, Validators.required),\n      ingredients: recipeIngredients\n    });\n  }\n\n\n  // Add ingredient on edit form.\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required)\n      })\n    );\n  }\n\n  // Delete single ingredient on edit form.\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  // On click on cancle button navigate to home page.\n  onCancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  // Function called when form is submitted.\n  onSubmit() {\n    if (this.editMode) { // If mode is edit then update recipe.\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else { // If mode is not edit then add recipe.\n      this.recipeService.addRecipe(this.recipeForm.value);\n\t  this.router.navigate(['../'], { relativeTo: this.route });\n    }\n  }\n\n  // Add multiple items for ingredient.\n  getControls() {\n    return (this.recipeForm.get('ingredients') as FormArray).controls;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWVudHJ5L3JlY2lwZS1lbnRyeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-entry',\n  templateUrl: './recipe-entry.component.html',\n  styleUrls: ['./recipe-entry.component.css']\n})\nexport class RecipeEntryComponent implements OnInit {\n  count: number;\n\n  constructor(private recipeservice: RecipeService) { }\n\n  ngOnInit() {\n    // Fetching recipe count to display message in template based on count.\n    this.recipeservice.recipeCount\n      .subscribe((countRecipe) => {\n        this.count = countRecipe;\n      });\n  }\n}\n","module.exports = \".list-group-item-text {\\n  max-width: 336px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtbGlzdC9yZWNpcGUtaXRlbS9yZWNpcGUtaXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtbGlzdC9yZWNpcGUtaXRlbS9yZWNpcGUtaXRlbS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxpc3QtZ3JvdXAtaXRlbS10ZXh0IHtcbiAgbWF4LXdpZHRoOiAzMzZweDtcbn1cbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipeItems: Recipe;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".filter {\\n  margin-bottom: 15px;\\n}\\n\\n.chkbox {\\n  margin-left:15px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtbGlzdC9yZWNpcGUtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcmVjaXBlcy9yZWNpcGUtbGlzdC9yZWNpcGUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbHRlciB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi5jaGtib3gge1xuICBtYXJnaW4tbGVmdDoxNXB4O1xufVxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[] = [];\n  recipeSubscription: Subscription;\n  isFetching: boolean;\n  error: string;\n  loader = 'loading...';\n  filterMsg = 'No matches, Please refine your search!';\n  recipeMsg = 'No recipes available!';\n  filterArr = [];\n  recipeType = [{ checked: false, type: 'veg' }, { checked: false, type: 'nonveg' }];\n  filterString: string;\n\n  constructor(private recipeservice: RecipeService) { }\n\n  ngOnInit() {\n    this.isFetching = true;\n    // Fetch recipes by subscribing to http request.\n    this.recipeservice.fetchRecipes().subscribe(\n      responseData => {\n        this.isFetching = false;\n        this.recipes = responseData.recipes;\n        this.recipeservice.setRecipes(this.recipes);\n      },\n      error => {\n        this.isFetching = false;\n        this.error = error.message;\n      }\n    );\n    this.recipeSubscription = this.recipeservice.recipesChanged.subscribe((recipes) => {\n      this.recipes = recipes;\n    });\n  }\n\n  // Clear memory for stored subscription.\n  ngOnDestroy() {\n    this.recipeSubscription.unsubscribe();\n  }\n\n}\n","// Filter recipes based on type(veg, nonveg).\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'recipefilter',\n  pure: false\n})\nexport class recipefilterPipe implements PipeTransform {\n  transform(values: any, args?: any[]): any {\n    return values = values.filter(a => {\n      return args.length ? args.indexOf(a.indicator) != -1 : values;\n    });\n  }\n}\n","// Filter recipes based on serach string.\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'recipesearch',\n  pure: false\n})\nexport class RecipesearchPipe implements PipeTransform {\n\n  transform(value: any, args: string): any {\n    if (!value) { return null; }\n    if (!args) { return value; }\n    // The filter() method creates an array filled with all array elements that pass a test.\n    return value.filter(function (item) {\n      let arg = args.toLowerCase();\n      return JSON.stringify(item).toLowerCase().includes(arg);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Recipe } from './recipe.model';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class RecipeService {\n  environmentapiUrl: string;\n  recipesChanged = new Subject<Recipe[]>();\n  recipeCount = new Subject<number>();\n  private recipes: Recipe[] = [];\n\n  constructor(private http: HttpClient, private router: Router, private route: ActivatedRoute) {\n    this.environmentapiUrl = environment.apiUrl;\n  }\n\n  // Emit changed data and count for other components.\n  updatedRecipeEmitter() {\n    this.recipesChanged.next([...this.recipes]);\n    this.recipeCount.next(this.recipes.length);\n  }\n\n  // Assign fetched Recipe and emit data.\n  setRecipes(recipes: Recipe[]) {\n    this.recipes = recipes;\n    this.updatedRecipeEmitter();\n  }\n\n\n  // Get single recipe.\n  getRecipeById(recipeId) {\n    const getSingleRecipe = this.environmentapiUrl + '/recipes/';\n    return this.http.get<Recipe>(getSingleRecipe + recipeId);\n  }\n\n\n  // Add recipe to array.\n  addRecipe(recipeData) {\n    const currentDate = new Date();\n    const recipeId = Date.now();\n    const singleRecipe: Recipe = {\n      id: recipeId, name: recipeData.name, imagePath: recipeData.imagePath,\n      indicator: recipeData.indicator, eatCount: recipeData.eatCount, ingredients: recipeData.ingredients,\n      instructions: recipeData.instructions, creationDate: currentDate\n    };\n\n    this.recipes.push(singleRecipe);\n    const postApi = this.environmentapiUrl + '/posts';\n    this.http\n      .post(\n        postApi,\n        this.recipes\n      )\n      .subscribe(() => {\n        this.updatedRecipeEmitter();\n      });\n  }\n\n  // Update recipes from client.\n  updateRecipe(index: number, updatedRecipe: Recipe) {\n    const currentDate = new Date();\n    const oneRecipe: Recipe = {\n      id: index, name: updatedRecipe.name, imagePath: updatedRecipe.imagePath,\n      indicator: updatedRecipe.indicator, eatCount: updatedRecipe.eatCount, ingredients: updatedRecipe.ingredients,\n      instructions: updatedRecipe.instructions, creationDate: currentDate\n    };\n\n    const updateApi = this.environmentapiUrl + '/recipesupdate/';\n    this.http.put(updateApi + index, oneRecipe)\n      .subscribe(() => {\n        const updatedRecipes = [...this.recipes];\n        const updatedIndex = updatedRecipes.findIndex(p => p.id === oneRecipe.id);\n        updatedRecipes[updatedIndex] = oneRecipe;\n        this.recipes = updatedRecipes;\n        // Emit updated recipes for other component.\n        this.updatedRecipeEmitter();\n        // Redirects to recipes page.\n        this.router.navigate(['/recipes/', index]);\n      });\n  }\n\n  // Delete recipes from client.\n  deleteRecipe(recipeId: number) {\n    const deleteApi = this.environmentapiUrl + '/recipes/';\n    this.http.delete(deleteApi + recipeId)\n      .subscribe((response) => {\n        this.recipes = response['remainingPost'];\n        this.updatedRecipeEmitter();\n      });\n  }\n\n\n  // Fetch recipes from server via api. uses angular http module.\n  fetchRecipes() {\n    const getApi = this.environmentapiUrl + '/getRecipes';\n    return this.http.get<{ message: string, recipes: Recipe[] }>(getApi);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  environmentName: 'Dev',\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}